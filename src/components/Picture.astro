---
import {getPicture} from '@astrojs/image'

const {
  src,
  alt,
  width,
  height,
  sizes,
  widths,
  onerror,
  aspectRatio = 1,
  formats = ['avif', 'webp'],
  loading = 'lazy',
  decoding = 'async',
  class: className = '',
  ...attrs
} = Astro.props

let picture = null
try {
  picture =
    src &&
    (await getPicture({
      src,
      widths,
      formats,
      aspectRatio,
    }))
} catch (e) {
  // continue regardless of error
}
if (alt === undefined || alt === null) {
  console.warn(`\n[@astrojs/image] "alt" text was not provided for an <Image> or <Picture> component.
A future release of @astrojs/image may throw a build error when "alt" text is missing.
The "alt" attribute holds a text description of the image, which isn't mandatory but is incredibly useful for accessibility. Set to an empty string (alt="") if the image is not a key part of the content (it's decoration or a tracking pixel).\n`)
}

const {image = {}, sources = []} = picture || {}
---

{
  src && image?.src && (
    <picture {...attrs}>
      {sources.map(attrs => (
        <source {...attrs} sizes={sizes} />
      ))}
      <img {...image} {loading} {decoding} {alt} class={className} onerror=`'this.onerror=null;this.src=${onerror}';` />
    </picture>
  )
}
